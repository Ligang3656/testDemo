<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.ligang</groupId>
    <artifactId>MySpringBoot</artifactId>
    <version>1.0-SNAPSHOT</version>
    <parent>
        <!--引入springboot-->
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.3.RELEASE</version>
    </parent>
    <!--该依赖提供了对springmvc的支持-->
<dependencies>

    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <!--该依赖是专用的测试依赖，集成了junit测试的框架-->
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-test</artifactId>
        <scope>test</scope>
    </dependency>
    <!--spring官方提供的模板引擎-->
    <!--包括 FreeMarker Velocity Thymeleaf Groovy Mustache 和JSP-->
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-freemarker</artifactId>
    </dependency>
<!--  springBoot默认的Jackson引擎去解析控制器返回的对象时，效率低，所以我们将其转换成（FastJson 或 Gson） 先导入依赖-->
    <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>fastjson</artifactId>
        <version>1.2.80</version>
    </dependency>
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-mail</artifactId>
    </dependency>

</dependencies>



    <!--build标签定义了关于maven编译和打包的一些信息-->
    <build>
        <!--finalName为打包后的文件名-->
        <finalName>api</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <!--plugins设置了编译的参数-->
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <!--spring-boot-maven-plugin 这是springBoot的编译插件-->
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.3.12.RELEASE</version>
                <configuration>
                    <fork>true</fork>
                    <!--mainClass指定了启动类-->
                    <mainClass>com.app.Application</mainClass>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <!--设置默认的编码格式-->
                    <encoding>utf-8</encoding>
                    <useDefaultDelimiters>true</useDefaultDelimiters>
                </configuration>
            </plugin>


            <plugin>
                <!--maven官方提供的用于构建测试用例的插件，如果有单元测试类，在编译完成后会执行测试单元，测试成功后才会打包-->
                <!--如果不希望执行的单元测试，skipTests设置为true就可以，如果设置为false，打包时间会过长-->
                <!--如果单元测试类中还有sql语句，那么编译时还有可能会对数据库产生影响-->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>

            <!--maven-compiler-plugin maven官方提供的指定编译器版本的插件-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>